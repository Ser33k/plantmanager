{"version":3,"sources":["service/PlantDataService.js","component/ListPlants.js","component/HoverRating.js","sensor/PlantAgent.js","component/SensorPrinter.js","component/PlantComponent.js","component/PrimarySearchAppBar.js","component/PlantManagerApp.js","App.js","reportWebVitals.js","index.js"],"names":["PLANT_API_URL","id","axios","get","delete","plant","put","post","ListPlants","props","useState","plants","setPlants","useEffect","PlantDataService","retrieveAllPlants","then","response","console","log","data","deletePlantClicked","a","deletePlant","status","prev","filter","className","map","name","description","onClick","history","push","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","useStyles","makeStyles","root","width","display","alignItems","HoverRating","React","value","setValue","hover","setHover","classes","Rating","precision","onChange","event","newValue","onChangeActive","newHover","Box","ml","SENSOR_SERVICE","HUMIDITY_CHARACTERISTIC","BLE_DEVICE_NAME","this","device","onDisconnected","bind","options","navigator","bluetooth","requestDevice","addEventListener","gatt","connect","Promise","reject","listener","getPrimaryService","service","getCharacteristic","characteristic","startNotifications","stopNotifications","removeEventListener","disconnect","SensorPrinter","humidityReceived","ev","target","getUint8","PlantAgent","request","startHumidityNotifications","PlantComponent","parseInt","match","params","setDescription","setName","useHistory","retrievePlant","r","initialValues","onSubmit","values","createPlant","updatePlant","handleOnSubmit","validateOnChange","validateOnBlur","validate","errors","length","enableReinitialize","component","type","disabled","drawerWidth","theme","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","appBar","zIndex","drawer","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","toolbar","mixins","content","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","useTheme","open","setOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","renderMiniDrawer","Drawer","variant","clsx","paper","direction","Divider","List","text","index","ListItem","button","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","Toolbar","edge","Typography","noWrap","InputBase","placeholder","input","inputProps","PlantManagerApp","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d2e6bf0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst MANAGER_API_URL = \"http://localhost:8080\";\r\nconst PLANT_API_URL = `${MANAGER_API_URL}/plants`;\r\n\r\nclass PlantDataService {\r\n  retrievePlant(id) {\r\n    return axios.get(`${PLANT_API_URL}/${id}`);\r\n  }\r\n\r\n  retrieveAllPlants() {\r\n    return axios.get(PLANT_API_URL);\r\n  }\r\n\r\n  deletePlant(id) {\r\n    return axios.delete(`${PLANT_API_URL}/${id}`);\r\n  }\r\n\r\n  updatePlant(id, plant) {\r\n    return axios.put(`${PLANT_API_URL}/${id}`, plant);\r\n  }\r\n\r\n  createPlant(plant) {\r\n    return axios.post(`${PLANT_API_URL}/`, plant);\r\n  }\r\n}\r\n\r\nexport default new PlantDataService();\r\n","import { useEffect, useState } from \"react\";\r\nimport PlantDataService from \"../service/PlantDataService\";\r\n\r\nfunction ListPlants(props) {\r\n  const [plants, setPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PlantDataService.retrieveAllPlants().then((response) => {\r\n      console.log(response);\r\n      setPlants(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const deletePlantClicked = async (id) => {\r\n    const { status } = await PlantDataService.deletePlant(id);\r\n\r\n    if (status === 204) {\r\n      setPlants((prev) => prev.filter((plant) => plant.id !== id));\r\n    }\r\n  };\r\n\r\n  function updatePlantClicked(id) {\r\n    props.history.push(`/plants/${id}`);\r\n  }\r\n\r\n  function addPlantClicked() {\r\n    props.history.push(`/plants/-1`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {plants.map((plant) => (\r\n              <tr key={plant.name}>\r\n                <td>{plant.name}</td>\r\n                <td>{plant.description}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-warning\"\r\n                    onClick={() => deletePlantClicked(plant.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => updatePlantClicked(plant.id)}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"row\">\r\n        <button className=\"btn btn-success\" onClick={() => addPlantClicked()}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListPlants;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst labels = {\r\n    0.5: 'Useless',\r\n    1: 'Useless+',\r\n    1.5: 'Poor',\r\n    2: 'Poor+',\r\n    2.5: 'Ok',\r\n    3: 'Ok+',\r\n    3.5: 'Good',\r\n    4: 'Good+',\r\n    4.5: 'Excellent',\r\n    5: 'Excellent+',\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nexport default function HoverRating() {\r\n    const [value, setValue] = React.useState(2);\r\n    const [hover, setHover] = React.useState(-1);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Rating\r\n                name=\"hover-feedback\"\r\n                value={value}\r\n                precision={0.5}\r\n                onChange={(event, newValue) => {\r\n                    setValue(newValue);\r\n                }}\r\n                onChangeActive={(event, newHover) => {\r\n                    setHover(newHover);\r\n                }}\r\n            />\r\n            {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\r\n        </div>\r\n    );\r\n}\r\n","class PlantAgent {\r\n\r\n    SENSOR_SERVICE = 0xfff0;\r\n    HUMIDITY_CHARACTERISTIC = 'd7e84cb2-ff37-4afc-9ed8-5577aeb8454c';\r\n    BLE_DEVICE_NAME = 'PlantAgent';\r\n\r\n    constructor() {\r\n        this.device = null;\r\n        this.onDisconnected = this.onDisconnected.bind(this);\r\n    }\r\n\r\n    request() {\r\n        let options = {\r\n            \"filters\": [{\r\n                \"name\": this.BLE_DEVICE_NAME,\r\n                \"services\": [this.SENSOR_SERVICE]\r\n            }]\r\n        };\r\n        return navigator.bluetooth.requestDevice(options)\r\n            .then(device => {\r\n                this.device = device;\r\n                this.device.addEventListener('gattserverdisconnected', this.onDisconnected);\r\n            });\r\n    }\r\n\r\n    connect() {\r\n        if (!this.device) {\r\n            return Promise.reject('Device is not connected.');\r\n        }\r\n        return this.device.gatt.connect();\r\n    }\r\n\r\n    startHumidityNotifications(listener) {\r\n        return this.device.gatt.getPrimaryService(this.SENSOR_SERVICE)\r\n            .then(service => service.getCharacteristic(this.HUMIDITY_CHARACTERISTIC))\r\n            .then(characteristic => characteristic.startNotifications())\r\n            .then(characteristic => characteristic.addEventListener('characteristicvaluechanged', listener));\r\n    }\r\n\r\n    stopHumidityNotifications(listener) {\r\n        return this.device.gatt.getPrimaryService(this.SENSOR_SERVICE)\r\n            .then(service => service.getCharacteristic(this.HUMIDITY_CHARACTERISTIC))\r\n            .then(characteristic => characteristic.stopNotifications())\r\n            .then(characteristic => characteristic.removeEventListener('characteristicvaluechanged', listener));\r\n    }\r\n\r\n    disconnect() {\r\n        if (!this.device) {\r\n            return Promise.reject('Device is not connected.');\r\n        }\r\n        return this.device.gatt.disconnect();\r\n    }\r\n\r\n    onDisconnected() {\r\n        console.log('Device is disconnected.');\r\n    }\r\n}\r\n\r\nexport default new PlantAgent()\r\n","import PlantAgent from \"../sensor/PlantAgent\";\r\n\r\nexport default function SensorPrinter() {\r\n\r\n    const humidityReceived = (ev) => {\r\n        console.log(ev.target.value.getUint8(0))\r\n        console.log(\"hello\")\r\n    }\r\n\r\n\r\n    function disconnectSensor() {\r\n        PlantAgent.disconnect()\r\n    }\r\n\r\n    function requestSensor() {\r\n        PlantAgent.request();\r\n    }\r\n\r\n    function connectSensor() {\r\n        PlantAgent.connect()\r\n    }\r\n\r\n    function startSensor() {\r\n        PlantAgent.startHumidityNotifications(humidityReceived)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n            onClick={() => requestSensor()}>Request</button>\r\n            <button\r\n                onClick={() => connectSensor()}>Connect</button>\r\n            <button\r\n                onClick={() => startSensor()}>Start notifications</button>\r\n            <button\r\n                onClick={() => disconnectSensor()}>\r\n                Disconnect\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PlantDataService from \"../service/PlantDataService\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport HoverRating from \"./HoverRating\";\r\nimport SensorPrinter from \"./SensorPrinter\";\r\n\r\nfunction PlantComponent(props) {\r\n  const [id, setId] = useState(parseInt(props.match.params.id));\r\n  const [description, setDescription] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (id === -1) {\r\n      return;\r\n    }\r\n\r\n    PlantDataService.retrievePlant(id).then((r) => {\r\n      setDescription(r.data.description);\r\n      setName(r.data.name);\r\n    });\r\n    console.log(name);\r\n    console.log(description);\r\n  });\r\n\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    if (!values.description) {\r\n      errors.description = \"Enter a Description\";\r\n    } else if (values.description.length < 5) {\r\n      errors.description = \"Enter atleast 5 Characters in Description\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const handleOnSubmit = (values) => {\r\n    debugger;\r\n    const { id, name, description } = values;\r\n\r\n    const plant = {\r\n      id,\r\n      name,\r\n      description,\r\n    };\r\n\r\n    if (id === -1) {\r\n      PlantDataService.createPlant(plant).then(() => history.push(\"/plants\"));\r\n    } else {\r\n      PlantDataService.updatePlant(id, plant).then(() =>\r\n        history.push(\"/plants\")\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Plant details</h3>\r\n      <div className=\"container\">\r\n        <Formik\r\n          initialValues={{ id, description, name }}\r\n          onSubmit={(values) => handleOnSubmit(values)}\r\n          validateOnChange={false}\r\n          validateOnBlur={false}\r\n          validate={validate}\r\n          enableReinitialize={true}\r\n        >\r\n          {(props) => (\r\n            <Form>\r\n              <ErrorMessage\r\n                name=\"description\"\r\n                component=\"div\"\r\n                className=\"alert alert-warning\"\r\n              />\r\n              <fieldset className=\"form-group\">\r\n                <label>Id</label>\r\n                <Field\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"id\"\r\n                  disabled\r\n                />\r\n              </fieldset>\r\n              <fieldset className=\"form-group\">\r\n                <label>Description</label>\r\n                <Field\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                />\r\n              </fieldset>\r\n              <fieldset className=\"form-group\">\r\n                <label>Name</label>\r\n                <Field className=\"form-control\" type=\"text\" name=\"name\" />\r\n              </fieldset>\r\n              <button className=\"btn btn-success\" type=\"submit\">\r\n                Save\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <HoverRating/>\r\n      <SensorPrinter/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlantComponent;\r\n","import React from 'react';\r\nimport {fade, makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport clsx from \"clsx\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const renderMiniDrawer = (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Drawer>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerOpen}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Plant Manager\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <MailIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                            <Badge badgeContent={17} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n            {renderMiniDrawer}\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ListPlants from \"./ListPlants\";\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport PlantComponent from \"./PlantComponent\";\r\nimport PrimarySearchAppBar from \"./PrimarySearchAppBar\";\r\n\r\nfunction PlantManagerApp() {\r\n  return (\r\n    <Router>\r\n        <>\r\n            <PrimarySearchAppBar/>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={ListPlants} />\r\n                <Route path=\"/plants\" exact component={ListPlants} />\r\n                <Route path=\"/plants/:id\" component={PlantComponent} />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default PlantManagerApp;\r\n","import './App.css';\nimport PlantManagerApp from \"./component/PlantManagerApp\";\n\nfunction App() {\n  return (\n      <div className=\"container\">\n          <PlantManagerApp />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}